{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.component.js","components/Footer.component.js","actions/productActions.js","components/Meta.js","components/Rating.component.jsx","components/Product.component.jsx","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","screens/Homescreen/Homescreen.screen.jsx","screens/ProductScreen/ProductScreen.screen.jsx","actions/cartActions.js","screens/CartScreen/CartScreen.js","components/FormContainer.component.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/ProfileScreen/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen/ShippingScreen.js","screens/PaymentScreen/PaymentScreen.js","screens/PlaceOrderScreen/PlaceOrderScreen.js","screens/OrderScreen/OrderScreen.js","screens/UserListScreen/UserListScreen.js","screens/UserEditScreen/UserEditScreen.js","screens/ProductListScreen/ProductListScreen.js","screens/ProductEditScreen/ProductEditScreen.js","screens/OrderListScreen/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_ALL_REQUEST","ORDER_LIST_ALL_SUCCESS","ORDER_LIST_ALL_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","actionTypes","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","cartActionTypes","item","existItem","find","x","map","filter","paymentMethod","userLogin","userActionTypes","userInfo","userRegister","userUpdateProfile","userList","users","userDelete","userUpdate","user","userDetails","orderCreate","orderActionTypes","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderListAll","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","listProducts","pageNumber","listProductDetails","Meta","description","Helmet","content","defaultProps","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Homescreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","reviewSuccess","reviewError","alert","ListGroup","ListGroupItem","countInStock","disabled","length","variannt","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","Login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalcode","setPostalcode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","postalCode","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderLoading","orderListError","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3c23bcbe.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_ALL_REQUEST = 'ORDER_LIST_ALL_REQUEST'\r\nexport const ORDER_LIST_ALL_SUCCESS = 'ORDER_LIST_ALL_SUCCESS'\r\nexport const ORDER_LIST_ALL_FAIL = 'ORDER_LIST_ALL_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderListMyReducer,\r\n  orderPayReducer,\r\n  orderListAllReducer,\r\n  orderDeliverReducer\r\n} from \"./reducers/orderReducers\";\r\nimport { orderDetailsReducer } from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userDetails: userDetailsReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderListAll: orderListAllReducer,\r\n    orderDeliver: orderDeliverReducer\r\n   })\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore( reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import * as actionTypes from '../constants/productConstants';\r\n\r\n\r\n\r\nexport const productListReducer = (\r\n   state = { products: [] },\r\n   action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case actionTypes.PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.pages,\r\n      };\r\n    case actionTypes.PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n  export const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_DETAILS_REQUEST:\r\n        return { loading: true, ...state };\r\n      case actionTypes.PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload };\r\n      case actionTypes.PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const productDeleteReducer = (\r\n    state = { },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_DELETE_REQUEST:\r\n        return { loading: true}\r\n      case actionTypes.PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case actionTypes.PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productCreateReducer = (\r\n    state = { },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_CREATE_REQUEST:\r\n        return { loading: true}\r\n      case actionTypes.PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case actionTypes.PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case actionTypes.PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productUpdateReducer = (\r\n    state = { product: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true}\r\n      case actionTypes.PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case actionTypes.PRODUCT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case actionTypes.PRODUCT_UPDATE_RESET:\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  \r\n  export const productReviewCreateReducer = (\r\n    state = {},\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_CREATE_REVIEW_REQUEST:\r\n        return { loading: true}\r\n      case actionTypes.PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return { loading: false, success: true}\r\n      case actionTypes.PRODUCT_CREATE_REVIEW_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case actionTypes.PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productTopRatedReducer = (\r\n    state = { products: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case actionTypes.PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: []}\r\n      case actionTypes.PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload}\r\n      case actionTypes.PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }     \r\n      default:\r\n        return state\r\n    }\r\n  }","import * as cartActionTypes from '../constants/cartConstants';\r\n\r\n\r\n\r\n\r\n//Changed .product to productId\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case cartActionTypes.CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n            if(existItem) {\r\n               return{\r\n                ...state,\r\n                cartItems: state.cartItems.map(x => x.product === existItem.product? item: x)\r\n               } \r\n            }else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case cartActionTypes.CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case cartActionTypes.CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case cartActionTypes.CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case cartActionTypes.CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import * as userActionTypes from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case userActionTypes.USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case userActionTypes.USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case userActionTypes.USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  export const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_REGISTER_REQUEST:\r\n        return { loading: true }\r\n      case userActionTypes.USER_REGISTER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case userActionTypes.USER_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  export const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_DETAILS_REQUEST:\r\n        return {...state, loading: true }\r\n      case userActionTypes.USER_DETAILS_SUCCESS:\r\n        return { loading: false, user: action.payload }\r\n      case userActionTypes.USER_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case userActionTypes.USER_DETAILS_RESET:\r\n        return { user: {} }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  export const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_UPDATE_PROFILE_REQUEST:\r\n        return {loading: true }\r\n      case userActionTypes.USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, userInfo: action.payload }\r\n      case userActionTypes.USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  export const userListReducer = (state = {users: []}, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_LIST_REQUEST:\r\n        return {loading: true }\r\n      case userActionTypes.USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case userActionTypes.USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case userActionTypes.USER_LIST_RESET:\r\n        return { users: []}\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  export const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_DELETE_REQUEST:\r\n        return {loading: true }\r\n      case userActionTypes.USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true}\r\n      case userActionTypes.USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }      \r\n      default:\r\n        return state\r\n    }\r\n  };\r\n\r\n  \r\n  export const userUpdateReducer = (state = {user: {} }, action) => {\r\n    switch (action.type) {\r\n      case userActionTypes.USER_UPDATE_REQUEST:\r\n        return {loading: true }\r\n      case userActionTypes.USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true}\r\n      case userActionTypes.USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload } \r\n      case userActionTypes.USER_UPDATE_RESET:\r\n        return {\r\n          user: {}\r\n        }    \r\n      default:\r\n        return state\r\n    }\r\n  };","import * as orderActionTypes from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case orderActionTypes.ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case orderActionTypes.ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case orderActionTypes.ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n          default:\r\n              return {state}  \r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case orderActionTypes.ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case orderActionTypes.ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case orderActionTypes.ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n  export const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case orderActionTypes.ORDER_PAY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        };\r\n      case orderActionTypes.ORDER_PAY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n        };\r\n      case orderActionTypes.ORDER_PAY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      case orderActionTypes.ORDER_PAY_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case orderActionTypes.ORDER_DELIVER_REQUEST:\r\n        return {\r\n          loading: true,\r\n        };\r\n      case orderActionTypes.ORDER_DELIVER_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n        };\r\n      case orderActionTypes.ORDER_DELIVER_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      case orderActionTypes.ORDER_DELIVER_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case orderActionTypes.ORDER_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        };\r\n      case orderActionTypes.ORDER_LIST_MY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        };\r\n      case orderActionTypes.ORDER_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n        case orderActionTypes.ORDER_LIST_MY_RESET:\r\n        return { orders: [] };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const orderListAllReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case orderActionTypes.ORDER_LIST_ALL_REQUEST:\r\n        return {\r\n          loading: true,\r\n        };\r\n      case orderActionTypes.ORDER_LIST_ALL_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        };\r\n      case orderActionTypes.ORDER_LIST_ALL_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n       \r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\n\r\nconst SearchBox = ({history}) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(keyword.trim()) {\r\n        history.push(`/search/${keyword}`)\r\n       \r\n    }else {\r\n        history.push('/')\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n          Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox\r\n","import * as userActionTypes from '../constants/userConstants';\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants';\r\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const Login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_LOGIN_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    localStorage.removeItem('paymentMethod');\r\n    dispatch({type: userActionTypes.USER_LOGOUT})\r\n    dispatch({type: userActionTypes.USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: userActionTypes.USER_LIST_RESET})\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    document.location.href = '/'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_REGISTER_REQUEST\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.post('api/users', {name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\n//Remember that we can get the token by including getState\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: userActionTypes.USER_DETAILS_REQUEST,\r\n    })\r\n    //destructuring to get the userInfo from getState - we keep the token there\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: userActionTypes.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userActionTypes.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_LIST_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_DELETE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_DELETE_SUCCESS              \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {  \r\n                'Content-Type'  : 'application/json',            \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_SUCCESS,\r\n            payload: data          \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: userActionTypes.USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport {logout} from '../actions/userActions';\r\n\r\n\r\n//Lesson 8: Added LinkContainer from bootstrap - first time using this. It makes it so the page doesn't reload when the links are clicked\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Route render={({history}) => <SearchBox history={history} />}/>\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"fas fa-shopping-cart\">Cart</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"userName\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>\r\n                    Copyright &copy; ProShop\r\n                </Col>\r\n            </Row>\r\n        </Container>           \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listProducts = (keyword = '', pageNumber='') => async (dispatch) => {\r\n    //Lesson 86: Adding pageNumber for pagination funtionallity\r\n    //Lesson 85: Added keyword to implement search fuctionallity - changed the route\r\n    try {\r\n        dispatch({ type: actionTypes.PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    //Lesson 86: Adding pageNumber for pagination funtionallity\r\n    //Lesson 85: Added keyword to implement search fuctionallity - changed the route\r\n    try {\r\n        dispatch({ type: actionTypes.PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({ type: actionTypes.PRODUCT_CREATE_REVIEW_RESET })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_DELETE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_DELETE_SUCCESS              \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.post(`/api/products`, {}, config)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_SUCCESS, \r\n            payload: data             \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_UPDATE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: { \r\n                'Content-Type': 'application/json',            \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_UPDATE_SUCCESS, \r\n            payload: data             \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_REVIEW_REQUEST\r\n        });\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: { \r\n                'Content-Type': 'application/json',            \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_REVIEW_SUCCESS, \r\n                      \r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Meta = ({title, description, keyword}) => {\r\n    return (\r\n        \r\n            <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keyword} />\r\n    </Helmet>\r\n        \r\n    )\r\n}\r\nMeta.defaultProps = {\r\n    title: 'Welcome to ProShop',\r\n    description: 'We sell the best products for cheap',\r\n    keyword: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Component developed in lesson 7\r\n//This is the syntax for displaying the stars for a review\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n//First time using a default prop\r\nRating.defaultProps = { color: '#f8e825'};\r\n\r\n//We can set the type for the props - ensures that we are sending the right data type\r\nRating.propTypes = {\r\n    value: PropTypes.number,\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n};\r\n\r\nexport default Rating\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from '../components/Rating.component';\r\n\r\n\r\n//Lesson 8 - We started using 'a tags' like the copied text below and we switched to <Link /> because React is a single page app and we don't want the page to reload in it's entirety. Change the a tags to Link and change the href => to=\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                   <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as='h3' >${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n\r\n// return (\r\n//     <Card className='my-3 p-3 rounded'>\r\n//         <a href={`/product?${product.id}`}>\r\n//             <Card.Img src={product.image} variant='top'/>\r\n//         </a>\r\n//         <Card.Body>\r\n//             <a href={`/product/${product.id}`}>\r\n//                 <Card.Title as='div'>\r\n//                     <strong>{product.name}</strong>\r\n//                 </Card.Title>\r\n//             </a>\r\n//             <Card.Text as='div'>\r\n//                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n//             </Card.Text>\r\n//             <Card.Text as='h3' >${product.price}</Card.Text>\r\n//         </Card.Body>\r\n//     </Card>\r\n// )","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps =  {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import { Spinner } from 'react-bootstrap';\r\n\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <Spinner \r\n        animation='border'\r\n        role='status' \r\n        style={{ \r\n            width: '100px', \r\n            height: '100px', \r\n            margin: 'auto', \r\n            display:'block'\r\n            }}> \r\n            <span className='sr-only'> Loading...</span>           \r\n        </Spinner>\r\n    )\r\n}\r\nexport default Loader","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} ({product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { listProducts } from '../../actions/productActions';\r\nimport Meta from '../../components/Meta';\r\nimport Product from '../../components/Product.component';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport Paginate from '../../components/Paginate';\r\nimport ProductCarousel from '../../components/ProductCarousel';\r\n\r\n\r\n\r\n\r\nconst Homescreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => {\r\n    return state.productList;\r\n  });\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  //const products = []\r\n\r\n  return (\r\n    <>    \r\n    <Meta />\r\n      {!keyword ? <ProductCarousel /> : <Link to='/' className='bt btn-light'>\r\n        Go Back\r\n      </Link>}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products &&\r\n              products.map((product) => (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homescreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../../components/Rating.component\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../../actions/productActions\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport Meta from '../../components/Meta';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => {\r\n    return state.productDetails;\r\n  });\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => {\r\n    return state.productReviewCreate;\r\n  });\r\n  const { success: reviewSuccess, error: reviewError } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if(reviewSuccess) {\r\n      alert('review submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, reviewSuccess]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const reviewSubmitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, {\r\n      rating,\r\n      comment\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n        <Meta title={product.name} />\r\n          <Row>\r\n            <Col className=\"product-page-section\" md={6}>\r\n              <Image\r\n                src={product.image}\r\n                alt={product.name}\r\n                fluid\r\n              />\r\n            </Col>\r\n            <Col className=\"product-page-section\" md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroupItem>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  Price: ${product.price}\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  Description: {product.description}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col className=\"product-page-section\" md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col className=\"product-page-section\">Price:</Col>\r\n                      <Col className=\"product-page-section\">\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col className=\"product-page-section\">Status:</Col>\r\n                      <Col className=\"product-page-section\">\r\n                        {product.countInStock > 0\r\n                          ? \"In stock\"\r\n                          : \"Out of stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col className=\"product-page-section\">Qty</Col>\r\n                        <Col className=\"product-page-section\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[\r\n                              ...Array(product.countInStock).keys(),\r\n                            ].map((x) => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroupItem>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {reviewError && <Message variant=\"danger\">{reviewError}</Message>}\r\n              {product.reviews.length === 0 && (\r\n                <Message>Be the first to leave a review</Message>\r\n              )}\r\n              <ListGroup variannt=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a customer review</h2>\r\n                  {userInfo ? (\r\n                    <Form onSubmit={reviewSubmitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"0\">Select...</option>\r\n                          <option value=\"1\">Poor</option>\r\n                          <option value=\"2\">Fair</option>\r\n                          <option value=\"3\">Good</option>\r\n                          <option value=\"4\">Very Good</option>\r\n                          <option value=\"5\">Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Submit Review\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import * as cartActionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: cartActionTypes.CART_ADD_ITEM,\r\n        payload: {\r\n            image: data.image,\r\n            product: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: cartActionTypes.CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: cartActionTypes.CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: cartActionTypes.CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n};","import React, {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport Message from '../../components/Message';\r\nimport { addToCart, removeFromCart } from '../../actions/cartActions';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n\r\n  const productId = match.params.id;\r\n\r\n    //The qty using the search.location will get us the actual quantity that the user specified on the add to cart. We have to cast it to a number because it is a string \r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector( state => state.cart);\r\n    const {cartItems} = cart;\r\n    console.log(cartItems);\r\n\r\n\r\n//Lesson 34 - Remember to change back if we have issues in the future - The call to addToCart is made from the products page when we hit add to cart - also it doesn't seem like the quantity is being added and the url changed a lot - Now changed to the original until I can understand what is going on...\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    //Just remember that item.product refers to the id of the product - poorly named in the lesson :(\r\n    return (\r\n        <Row>\r\n           <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>     Go Back</Link></Message> : (\r\n            <ListGroup variant='flush'>\r\n                {cartItems.map(item => (\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>{item.price}</Col>\r\n                            <Col md={2}>\r\n                            <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                      {[...Array(item.countInStock).keys()].map(x => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                          {x + 1}\r\n                                        </option>\r\n                                      ))}\r\n                                    </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        )}\r\n           </Col>\r\n           <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items \r\n                            </h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkOutHandler}>\r\n                                Proceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n           </Col>\r\n          \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>      \r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {Login} from '../../actions/userActions';\r\nimport FormContainer from '../../components/FormContainer.component.js';\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(Login(email, password))\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    <FormContainer>\r\n    <h1>Sign In</h1>\r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {loading && <Loader />}\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type='submit' variant='primary'>\r\n        Sign In\r\n      </Button>\r\n    </Form>\r\n\r\n    <Row className='py-3'>\r\n      <Col>\r\n        New Customer?{' '}\r\n        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n          Register\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  </FormContainer>\r\n)\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {register} from '../../actions/userActions';\r\nimport FormContainer from '../../components/FormContainer.component.js';\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister= useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    };\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(password !== confirmPassword) {\r\n        setMessage('Passwords do not match!')\r\n    }else {\r\n        dispatch(register(name, email, password))\r\n    }\r\n\r\n    \r\n  };\r\n  \r\n\r\n  return (\r\n\r\n    <FormContainer>\r\n    <h1>Sign Up</h1>\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {loading && <Loader />}\r\n    <Form onSubmit={submitHandler}>\r\n    <Form.Group controlId='name'>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type='name'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      \r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='confirmPassword'>\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Confirm password'\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type='submit' variant='primary'>\r\n        Register\r\n      </Button>\r\n    </Form>\r\n\r\n    <Row className='py-3'>\r\n      <Col>\r\n        Have an account already?{' '}\r\n        <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n          Login\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  </FormContainer>\r\n)\r\n}\r\n\r\n\r\nexport default RegisterScreen;","import React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {getUserDetails, updateUserProfile} from '../../actions/userActions';\r\nimport {listMyOrders} from '../../actions/orderActions';\r\nimport {USER_UPDATE_PROFILE_RESET} from '../../constants/userConstants';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading:loadingOrders, error:errorOrders, orders } = orderListMy;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  // useEffect(() => {\r\n  //   if (!userInfo) {\r\n  //     history.push('/login')\r\n  //   } else {\r\n  //       if(!user.name ) {\r\n  //         dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n  //         dispatch(getUserDetails('profile'))\r\n  //         dispatch(listMyOrders())\r\n  //       }else {\r\n  //           setName(user.name)\r\n  //           setEmail(user.email)\r\n  //       }\r\n  //   }\r\n  // }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(password !== confirmPassword) {\r\n        setMessage('Passwords do not match!')\r\n    }else {\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password}))\r\n    }    \r\n  };\r\n  \r\n\r\n  return <Row>\r\n      <Col md={3}>\r\n      <h2>User Profile</h2>\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {success && <Message variant='success'>Profile Updated successfully</Message>}\r\n    {loading && <Loader />}\r\n    <Form onSubmit={submitHandler}>\r\n    <Form.Group controlId='name'>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type='name'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Form.Control>\r\n\r\n      </Form.Group>\r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='confirmPassword'>\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Confirm password'\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type='submit' variant='primary'>\r\n        Update\r\n      </Button>\r\n    </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message>: (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                )}</td>\r\n                <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                )}</td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className='btn-sm' variant='light'>Details</Button>\r\n                  </LinkContainer>\r\n                </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ) }\r\n      </Col>\r\n  </Row>\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileScreen;\r\n","import * as orderActionTypes from '../constants/orderConstants';\r\nimport {CART_CLEAR_ITEMS} from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_CREATE_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.post(`api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_DETAILS_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {             \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_PAY_REQUEST\r\n        });\r\n        //destructuring to get the userInfo from getState - we keep the token there\r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: { \r\n                'Content-Type': 'application/json' ,          \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_DELIVER_REQUEST\r\n        });\r\n        \r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {          \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_MY_REQUEST\r\n        });\r\n        \r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                          \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const listAllOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_ALL_REQUEST\r\n        });\r\n   \r\n        const {userLogin: {userInfo}} = getState();\r\n\r\n        const config = {\r\n            headers: {                          \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_ALL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderActionTypes.ORDER_LIST_ALL_FAIL,\r\n            payload: error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport {Nav} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer.component.js';\r\nimport {saveShippingAddress} from '../../actions/cartActions';\r\nimport CheckoutSteps from '../../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address || '');\r\n  const [city, setCity] = useState(shippingAddress.city || '');\r\n  const [postalcode, setPostalcode] = useState(shippingAddress.postalcode || '');\r\n  const [country, setCountry] = useState(shippingAddress.country || '');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({address, city, postalcode, country}))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n    <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalcode\">\r\n          <Form.Label>Postalcode</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postalcode\"\r\n            value={postalcode}\r\n            required\r\n            onChange={(e) => setPostalcode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n            Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen\r\n","import React, {useState} from 'react';\r\nimport {Form, Button, Col} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer.component.js';\r\nimport {savePaymentMethod} from '../../actions/cartActions';\r\nimport CheckoutSteps from '../../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n        \r\n        <Col>\r\n          <Form.Check\r\n            type=\"radio\"\r\n            label=\"PayPal or Credit Card\"\r\n            id=\"Paypal\"\r\n            name=\"paymentMethod\"\r\n            value=\"PayPal\"\r\n            checked\r\n            onChange={(e) => setPaymentMethod(e.target.value)}\r\n          ></Form.Check>\r\n          {/* <Form.Check\r\n            type=\"radio\"\r\n            label=\"Stripe\"\r\n            id=\"Stripe\"\r\n            name=\"paymentMethod\"\r\n            value=\"Stripe\"\r\n            checked\r\n            onChange={(e) => setPaymentMethod(e.target.value)}\r\n          ></Form.Check> */}\r\n        </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport CheckoutSteps from '../../components/CheckoutSteps';\r\nimport {createOrder} from '../../actions/orderActions';\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n   \r\n\r\n    // Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round((num * 100) / 100).toFixed(2))\r\n    };\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10.00);\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n    cart.totalPrice =( (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2));\r\n    \r\n   \r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const {order, success, error} = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n          history.push(`/order/${order._id}`)\r\n        }\r\n      }, [history, success, order]);\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Address: </strong>\r\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                  {cart.shippingAddress.postalCode},{\" \"}\r\n                  {cart.shippingAddress.country}\r\n                </p>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {cart.cartItems.length === 0 ? (\r\n                  <Message>Your cart is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant=\"flush\">\r\n                    {cart.cartItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            {item.qty} X ${item.price} = ${(item.qty*item.price).toFixed(2)}\r\n                        </Col>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n              <Card>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                          <h2>Order Summary</h2>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Row>\r\n                              <Col>Items</Col>\r\n                              <Col>${cart.itemsPrice}</Col>\r\n                          </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Row>\r\n                              <Col>Shipping</Col>\r\n                              <Col>${cart.shippingPrice}</Col>\r\n                          </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Row>\r\n                              <Col>Tax</Col>\r\n                              <Col>${cart.taxPrice}</Col>\r\n                          </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Row>\r\n                              <Col>Total</Col>\r\n                              <Col>${cart.totalPrice}</Col>\r\n                          </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          {error && <Message variant='danger'>{error}</Message>}\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                              Submit Order\r\n                          </Button>\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Card>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n};\r\nexport default PlaceOrderScreen;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {PayPalButton} from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {getOrderDetails, payOrder, deliverOrder} from '../../actions/orderActions';\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from '../../constants/orderConstants';\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n  // useEffect(() => {\r\n  //   if(!userInfo)  {\r\n  //     history.push('/login')\r\n  //   }\r\n  //   //All code here is for using the paypal api and accessing the client id - previous code setup is located in the backend - server.js.\r\n  //   const addPayPalScript = async () => {\r\n  //     const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n  //     const script = document.createElement(\"script\");\r\n  //     script.type = \"text/javascript\";\r\n  //     script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n  //     script.async = true;\r\n  //     script.onlaod = () => {\r\n  //       setSdkReady(true);\r\n  //     };\r\n  //     document.body.appendChild(script);\r\n  //   };\r\n\r\n  //   if (!order || successPay || successDeliver || order._id !== orderId) {\r\n  //     dispatch({ type: ORDER_PAY_RESET });\r\n  //     dispatch({ type: ORDER_DELIVER_RESET });\r\n  //     dispatch(getOrderDetails(orderId));\r\n  //   } else if (!window.paypal) {\r\n  //     addPayPalScript();\r\n  //   } else {\r\n  //     setSdkReady(true);\r\n  //   }\r\n  // }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && !order.isDelivered  && (\r\n                <ListGroup.Item>\r\n                  <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                    Mark as delivered\r\n                  </Button>\r\n                </ListGroup.Item>)}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OrderScreen;","import React, {useEffect} from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {listUsers, deleteUser} from '../../actions/userActions';\r\n\r\n\r\nconst UserListScreen = ({history}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login')\r\n    }    \r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if(window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(id))\r\n      console.log('delete');\r\n    }   \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer.component.js';\r\nimport {getUserDetails, updateUser} from '../../actions/userActions';\r\nimport {USER_UPDATE_RESET} from '../../constants/userConstants';\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n \r\n  useEffect(() => {\r\n    if(successUpdate) {\r\n      dispatch({type: USER_UPDATE_RESET})\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if((!user.name) || (user._id) !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n       \r\n    } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n    }\r\n    }\r\n     \r\n  }, [dispatch, userId, user, successUpdate, history])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); \r\n    dispatch(updateUser({_id: userId, name, email, isAdmin}))\r\n    };\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n    </Link>\r\n    <FormContainer>\r\n    <h1>Edit User</h1>\r\n    {loadingUpdate && <Loader />}\r\n    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n    {loading ? <Loader />: error ? <Message variant='danger'>{error}</Message> :\r\n    (\r\n        <Form onSubmit={submitHandler}>\r\n    <Form.Group controlId='name'>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type='name'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      \r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='isAdmin'>        \r\n        <Form.Check\r\n          type='checkbox'\r\n          label='Is Admin'\r\n          checked={isAdmin}\r\n          onChange={(e) => setIsAdmin(e.target.checked)}\r\n        ></Form.Check>\r\n      </Form.Group>     \r\n\r\n      <Button type='submit' variant='primary'>\r\n        Update\r\n      </Button>\r\n    </Form>\r\n    )} \r\n    \r\n    \r\n  </FormContainer>\r\n    </>\r\n)\r\n}\r\n\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Paginate from '../../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts('', pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber\r\n  ]);\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n    console.log(\"create product button clicked\");\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>${product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport FormContainer from \"../../components/FormContainer.component.js\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct({\r\n      _id: productId,  //REmember that this syntax is how we get the product id from the url\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      description,\r\n      countInStock,\r\n     }))\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multypart/form-data'\r\n        }\r\n      }\r\n      const {data} = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Item price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Item image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Item Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand name\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Item category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count in stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter amount in stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Item description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, {useEffect} from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {listAllOrders} from '../../actions/orderActions';\r\n\r\n\r\nconst OrderListScreen = ({history}) => {\r\n  const dispatch = useDispatch();  \r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListAll = useSelector(state => state.orderListAll);\r\n  const {loading: orderLoading, error: orderListError, orders} = orderListAll;\r\n\r\n  useEffect(() => {\r\n    if(userInfo && userInfo.isAdmin) {\r\n      dispatch(listAllOrders());\r\n    } else {\r\n      history.push('/login')\r\n    }    \r\n  }, [dispatch, history, userInfo]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {orderLoading ? (\r\n        <Loader />\r\n      ) : orderListError ? (\r\n        <Message variant=\"danger\">{orderListError}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PRICE</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user &&  order.user.name}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                 \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen\r\n","\nimport { Container } from 'react-bootstrap';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Header from './components/Header.component';\nimport Footer from './components/Footer.component';\nimport Homescreen from './screens/Homescreen/Homescreen.screen';\nimport ProductScreen from './screens/ProductScreen/ProductScreen.screen';\nimport CartScreen from './screens/CartScreen/CartScreen';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen/OrderScreen';\nimport UserListScreen from './screens/UserListScreen/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen/OrderListScreen';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/search/:keyword\" component={Homescreen} exact />\n          <Route path=\"/page/:pageNumber\" component={Homescreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={Homescreen}\n            exact\n          />\n          <Route path=\"/\" component={Homescreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}